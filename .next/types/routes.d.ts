// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/" | "/admin" | "/category"
type LayoutRoutes = never
type RedirectRoutes = never
type RewriteRoutes = "/audio" | "/audio/[[...path]]" | "/chat" | "/chat/[[...path]]" | "/embeddings" | "/embeddings/[[...path]]" | "/image" | "/image/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/audio": {}
  "/audio/[[...path]]": { "path"?: string[]; }
  "/category": {}
  "/chat": {}
  "/chat/[[...path]]": { "path"?: string[]; }
  "/embeddings": {}
  "/embeddings/[[...path]]": { "path"?: string[]; }
  "/image": {}
  "/image/[[...path]]": { "path"?: string[]; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
